"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.usersRoutes = void 0;
const express_1 = require("express");
const CreateUsersController_1 = require("../modules/registrations/useCases/Users/createUsers/CreateUsersController");
const ListUsersController_1 = require("../modules/registrations/useCases/Users/listUsers/ListUsersController");
const UpdateUsersController_1 = require("../modules/registrations/useCases/Users/updateUsers/UpdateUsersController");
const DeleteUsersController_1 = require("../modules/registrations/useCases/Users/deleteUsers/DeleteUsersController");
const ListResumedUsersController_1 = require("../modules/registrations/useCases/Users/listResumedUsers/ListResumedUsersController");
const auth0Check_1 = require("../modules/registrations/middleware/auth0Check");
const FindUserByIDController_1 = require("../modules/registrations/useCases/Users/findUserByID/FindUserByIDController");
const FindUserByEmailController_1 = require("../modules/registrations/useCases/Users/findUserByEmail/FindUserByEmailController");
const ResetPasswordUsersController_1 = require("../modules/registrations/useCases/Users/resetPasswordUsers/ResetPasswordUsersController");
const usersRoutes = (0, express_1.Router)();
exports.usersRoutes = usersRoutes;
const listUsersController = new ListUsersController_1.ListUsersController();
usersRoutes.get('/', auth0Check_1.checkJwtFromCookie, listUsersController.handle);
const findUserByIDController = new FindUserByIDController_1.FindUserByIDController();
usersRoutes.get('/findByID/:id', auth0Check_1.checkJwtFromCookie, findUserByIDController.handle);
const findUserByEmailController = new FindUserByEmailController_1.FindUserByEmailController();
usersRoutes.get('/findUnique', findUserByEmailController.handle);
const createUsersController = new CreateUsersController_1.CreateUsersController();
usersRoutes.post('/create', auth0Check_1.checkJwtFromCookie, createUsersController.handle);
const updateUsersController = new UpdateUsersController_1.UpdateUsersController();
usersRoutes.put('/update/:id', auth0Check_1.checkJwtFromCookie, updateUsersController.handle);
const deleteUsersController = new DeleteUsersController_1.DeleteUsersController();
usersRoutes.delete('/delete', auth0Check_1.checkJwtFromCookie, auth0Check_1.checkJwtFromCookie, deleteUsersController.handle);
const listResumedUsersController = new ListResumedUsersController_1.ListResumedUsersController();
usersRoutes.get('/resume', auth0Check_1.checkJwtFromCookie, listResumedUsersController.handle);
const resetPasswordUsersController = new ResetPasswordUsersController_1.ResetPasswordUsersController();
usersRoutes.post('/reset-password', auth0Check_1.checkJwtFromCookie, resetPasswordUsersController.handle);
